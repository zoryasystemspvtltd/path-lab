// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PathlabApi.Data;

#nullable disable

namespace PathlabApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250726110557_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Inventory.Models.BusinessUnit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long?>("EnterpriseId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EnterpriseId");

                    b.ToTable("BusinessUnits");
                });

            modelBuilder.Entity("Inventory.Models.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Inventory.Models.Enterprise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Enterprises");
                });

            modelBuilder.Entity("Inventory.Models.GRN", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GRNDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<long?>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PurchaseOrderItemId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("PurchaseOrderItemId");

                    b.ToTable("GRNs");
                });

            modelBuilder.Entity("Inventory.Models.GRNItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Expiry")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GRNDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("GRNId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GRNId");

                    b.HasIndex("ItemMasterId");

                    b.ToTable("GRNItems");
                });

            modelBuilder.Entity("Inventory.Models.Indent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("IndentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.ToTable("Indents");
                });

            modelBuilder.Entity("Inventory.Models.IndentItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("GRNDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("IndentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ItemMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IndentId");

                    b.HasIndex("ItemMasterId");

                    b.ToTable("IndentItems");
                });

            modelBuilder.Entity("Inventory.Models.ItemMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UnitOfMeasureId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("UnitOfMeasureId");

                    b.ToTable("ItemMasters");
                });

            modelBuilder.Entity("Inventory.Models.PurchaseOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<DateTime?>("PurchaseOrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("VendorId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VendorId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("Inventory.Models.PurchaseOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ItemMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("PurchaseOrderId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemMasterId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderItems");
                });

            modelBuilder.Entity("Inventory.Models.ReagentMapping", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ItemMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("QuantityUsed")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("TestId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemMasterId");

                    b.ToTable("ReagentMappings");
                });

            modelBuilder.Entity("Inventory.Models.StockAdjustment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ItemMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("QuantityAdjusted")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("StoreId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemMasterId");

                    b.HasIndex("StoreId");

                    b.ToTable("StockAdjustments");
                });

            modelBuilder.Entity("Inventory.Models.StockConsumption", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ItemMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("QuantityUsed")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StockConsumptionDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("TestId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemMasterId");

                    b.ToTable("StockConsumptions");
                });

            modelBuilder.Entity("Inventory.Models.StockEntry", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BatchNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Expiry")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ItemMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("QuantityAvailable")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("StoreId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemMasterId");

                    b.HasIndex("StoreId");

                    b.ToTable("StockEntries");
                });

            modelBuilder.Entity("Inventory.Models.Store", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BusinessUnitId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusinessUnitId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("Inventory.Models.UnitOfMeasure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UnitOfMeasures");
                });

            modelBuilder.Entity("Inventory.Models.Vendor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("PathlabApi.Data.Models.ApplicationLog", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("ActivityType")
                        .HasColumnType("int");

                    b.Property<string>("ContentHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("EntityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ApplicationLogs");
                });

            modelBuilder.Entity("PathlabApi.Data.Models.Attachment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<string>("ParentId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("PathlabApi.Data.Models.Department", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("PathlabApi.Data.Models.SpecimenMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpecimenMasters");
                });

            modelBuilder.Entity("PathlabApi.Data.Models.TestMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<long?>("SpecimenMasterId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("TestMasterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("SpecimenMasterId");

                    b.HasIndex("TestMasterId");

                    b.ToTable("TestMasters");
                });

            modelBuilder.Entity("PathlabApi.Data.Models.TestParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Member")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(511)
                        .HasColumnType("nvarchar(511)");

                    b.Property<string>("NormalRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<long?>("TestMasterId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("TestMasterId");

                    b.ToTable("TestParameters");
                });

            modelBuilder.Entity("Inventory.Models.BusinessUnit", b =>
                {
                    b.HasOne("Inventory.Models.Enterprise", "Enterprise")
                        .WithMany("BusinessUnits")
                        .HasForeignKey("EnterpriseId");

                    b.Navigation("Enterprise");
                });

            modelBuilder.Entity("Inventory.Models.GRN", b =>
                {
                    b.HasOne("Inventory.Models.BusinessUnit", "BusinessUnit")
                        .WithMany("GRNs")
                        .HasForeignKey("BusinessUnitId");

                    b.HasOne("Inventory.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("GRNs")
                        .HasForeignKey("PurchaseOrderId");

                    b.HasOne("Inventory.Models.PurchaseOrderItem", null)
                        .WithMany("GRNs")
                        .HasForeignKey("PurchaseOrderItemId");

                    b.Navigation("BusinessUnit");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Inventory.Models.GRNItem", b =>
                {
                    b.HasOne("Inventory.Models.GRN", "GRN")
                        .WithMany("GRNItems")
                        .HasForeignKey("GRNId");

                    b.HasOne("Inventory.Models.ItemMaster", "ItemMaster")
                        .WithMany("GRNItems")
                        .HasForeignKey("ItemMasterId");

                    b.Navigation("GRN");

                    b.Navigation("ItemMaster");
                });

            modelBuilder.Entity("Inventory.Models.Indent", b =>
                {
                    b.HasOne("Inventory.Models.BusinessUnit", "BusinessUnit")
                        .WithMany("Indents")
                        .HasForeignKey("BusinessUnitId");

                    b.Navigation("BusinessUnit");
                });

            modelBuilder.Entity("Inventory.Models.IndentItem", b =>
                {
                    b.HasOne("Inventory.Models.Indent", "Indent")
                        .WithMany("IndentItems")
                        .HasForeignKey("IndentId");

                    b.HasOne("Inventory.Models.ItemMaster", "ItemMaster")
                        .WithMany("IndentItems")
                        .HasForeignKey("ItemMasterId");

                    b.Navigation("Indent");

                    b.Navigation("ItemMaster");
                });

            modelBuilder.Entity("Inventory.Models.ItemMaster", b =>
                {
                    b.HasOne("Inventory.Models.Category", "Category")
                        .WithMany("ItemMasters")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Inventory.Models.UnitOfMeasure", "UnitOfMeasure")
                        .WithMany("ItemMasters")
                        .HasForeignKey("UnitOfMeasureId");

                    b.Navigation("Category");

                    b.Navigation("UnitOfMeasure");
                });

            modelBuilder.Entity("Inventory.Models.PurchaseOrder", b =>
                {
                    b.HasOne("Inventory.Models.Vendor", "Vendor")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("VendorId");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Inventory.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("Inventory.Models.ItemMaster", "ItemMaster")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("ItemMasterId");

                    b.HasOne("Inventory.Models.PurchaseOrder", "PurchaseOrder")
                        .WithMany("PurchaseOrderItems")
                        .HasForeignKey("PurchaseOrderId");

                    b.Navigation("ItemMaster");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Inventory.Models.ReagentMapping", b =>
                {
                    b.HasOne("Inventory.Models.ItemMaster", "ItemMaster")
                        .WithMany("ReagentMappings")
                        .HasForeignKey("ItemMasterId");

                    b.Navigation("ItemMaster");
                });

            modelBuilder.Entity("Inventory.Models.StockAdjustment", b =>
                {
                    b.HasOne("Inventory.Models.ItemMaster", "ItemMaster")
                        .WithMany("StockAdjustments")
                        .HasForeignKey("ItemMasterId");

                    b.HasOne("Inventory.Models.Store", "Store")
                        .WithMany("StockAdjustments")
                        .HasForeignKey("StoreId");

                    b.Navigation("ItemMaster");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Inventory.Models.StockConsumption", b =>
                {
                    b.HasOne("Inventory.Models.ItemMaster", "ItemMaster")
                        .WithMany("StockConsumptions")
                        .HasForeignKey("ItemMasterId");

                    b.Navigation("ItemMaster");
                });

            modelBuilder.Entity("Inventory.Models.StockEntry", b =>
                {
                    b.HasOne("Inventory.Models.ItemMaster", "ItemMaster")
                        .WithMany("StockEntries")
                        .HasForeignKey("ItemMasterId");

                    b.HasOne("Inventory.Models.Store", "Store")
                        .WithMany("StockEntries")
                        .HasForeignKey("StoreId");

                    b.Navigation("ItemMaster");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("Inventory.Models.Store", b =>
                {
                    b.HasOne("Inventory.Models.BusinessUnit", "BusinessUnit")
                        .WithMany("Stores")
                        .HasForeignKey("BusinessUnitId");

                    b.Navigation("BusinessUnit");
                });

            modelBuilder.Entity("PathlabApi.Data.Models.TestMaster", b =>
                {
                    b.HasOne("PathlabApi.Data.Models.SpecimenMaster", "SpecimenMaster")
                        .WithMany("TestMasters")
                        .HasForeignKey("SpecimenMasterId");

                    b.HasOne("PathlabApi.Data.Models.TestMaster", null)
                        .WithMany("TestMasters")
                        .HasForeignKey("TestMasterId");

                    b.Navigation("SpecimenMaster");
                });

            modelBuilder.Entity("PathlabApi.Data.Models.TestParameter", b =>
                {
                    b.HasOne("PathlabApi.Data.Models.TestMaster", "TestMaster")
                        .WithMany("TestParameters")
                        .HasForeignKey("TestMasterId");

                    b.Navigation("TestMaster");
                });

            modelBuilder.Entity("Inventory.Models.BusinessUnit", b =>
                {
                    b.Navigation("GRNs");

                    b.Navigation("Indents");

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("Inventory.Models.Category", b =>
                {
                    b.Navigation("ItemMasters");
                });

            modelBuilder.Entity("Inventory.Models.Enterprise", b =>
                {
                    b.Navigation("BusinessUnits");
                });

            modelBuilder.Entity("Inventory.Models.GRN", b =>
                {
                    b.Navigation("GRNItems");
                });

            modelBuilder.Entity("Inventory.Models.Indent", b =>
                {
                    b.Navigation("IndentItems");
                });

            modelBuilder.Entity("Inventory.Models.ItemMaster", b =>
                {
                    b.Navigation("GRNItems");

                    b.Navigation("IndentItems");

                    b.Navigation("PurchaseOrderItems");

                    b.Navigation("ReagentMappings");

                    b.Navigation("StockAdjustments");

                    b.Navigation("StockConsumptions");

                    b.Navigation("StockEntries");
                });

            modelBuilder.Entity("Inventory.Models.PurchaseOrder", b =>
                {
                    b.Navigation("GRNs");

                    b.Navigation("PurchaseOrderItems");
                });

            modelBuilder.Entity("Inventory.Models.PurchaseOrderItem", b =>
                {
                    b.Navigation("GRNs");
                });

            modelBuilder.Entity("Inventory.Models.Store", b =>
                {
                    b.Navigation("StockAdjustments");

                    b.Navigation("StockEntries");
                });

            modelBuilder.Entity("Inventory.Models.UnitOfMeasure", b =>
                {
                    b.Navigation("ItemMasters");
                });

            modelBuilder.Entity("Inventory.Models.Vendor", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("PathlabApi.Data.Models.SpecimenMaster", b =>
                {
                    b.Navigation("TestMasters");
                });

            modelBuilder.Entity("PathlabApi.Data.Models.TestMaster", b =>
                {
                    b.Navigation("TestMasters");

                    b.Navigation("TestParameters");
                });
#pragma warning restore 612, 618
        }
    }
}
